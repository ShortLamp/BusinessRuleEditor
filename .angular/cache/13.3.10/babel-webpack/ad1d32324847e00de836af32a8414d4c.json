{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let BusinessRuleEditorService = /*#__PURE__*/(() => {\n  class BusinessRuleEditorService {\n    constructor() {\n      this.usedIds = [];\n      this.testData = [{\n        RuleType: 'AND',\n        Value: [{\n          RuleType: 'EVAL',\n          Value: {\n            CompareTo: 'Value',\n            Operator: 'IN',\n            Field: 'Days_open',\n            Scope: 'unknown',\n            Value: ['Monday', 'Tuesday']\n          }\n        }, {\n          RuleType: 'EVAL',\n          Value: {\n            CompareTo: 'Value',\n            Operator: 'LT',\n            Field: 'Number_of_participants',\n            Scope: 'unknown',\n            Value: '50'\n          }\n        }]\n      }];\n      this.processedData = [];\n      this.processedData.push(this.assignIdsToRules(this.testData[0]));\n    }\n    getAvailableId() {\n      let id = 0;\n      while (this.usedIds.includes(id)) {\n        id++;\n      }\n      this.usedIds.push(id);\n      return id;\n    }\n    assignIdsToRules(tree) {\n      const traverse = node => {\n        const newNode = Object.assign({}, node);\n        if (node.RuleType) {\n          newNode.id = this.getAvailableId().toString();\n        }\n        if (node.Value && Array.isArray(node.Value)) {\n          newNode.Value = node.Value.map(child => traverse(child));\n        }\n        return newNode;\n      };\n      return traverse(tree);\n    }\n    removeNumberFromArray(numToRemove) {\n      const index = this.usedIds.indexOf(numToRemove);\n      if (index !== -1) {\n        this.usedIds.splice(index, 1);\n      }\n    }\n    getNode(rule) {}\n  }\n  BusinessRuleEditorService.ɵfac = function BusinessRuleEditorService_Factory(t) {\n    return new (t || BusinessRuleEditorService)();\n  };\n  BusinessRuleEditorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BusinessRuleEditorService,\n    factory: BusinessRuleEditorService.ɵfac,\n    providedIn: 'root'\n  });\n  return BusinessRuleEditorService;\n})();","map":null,"metadata":{},"sourceType":"module"}