{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@angular/cdk/drag-drop\";\nimport * as i3 from \"../drag-and-drop-manager.directive\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nfunction ItemComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ItemComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.addNewItem();\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"add\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ItemComponent_ng_container_4_mat_card_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card-content\");\n    i0.ɵɵelement(1, \"app-item\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"rule\", item_r5)(\"invert\", !ctx_r4.invert)(\"onDragDrop\", ctx_r4.onDragDrop$);\n  }\n}\nfunction ItemComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ItemComponent_ng_container_4_mat_card_content_1_Template, 2, 3, \"mat-card-content\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rule.Value);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    invert: a0\n  };\n};\nexport let ItemComponent = /*#__PURE__*/(() => {\n  class ItemComponent {\n    constructor() {}\n    ngOnInit() {}\n    convertToString(rule) {\n      if (typeof rule === 'object' && rule !== null && 'RuleType' in rule && rule.RuleType === \"EVAL\") {\n        if ('Field' in rule.Value) {\n          return rule.Value.Field + \" \" + rule.Value.Operator + \" \" + rule.Value.Value.toString();\n        }\n      } else if (typeof rule === 'object' && rule !== null && 'RuleType' in rule) {\n        return rule.RuleType;\n      }\n    }\n    isRuleLeaf(rule) {\n      if (typeof rule === 'object' && rule !== null && 'RuleType' in rule && rule.RuleType === \"EVAL\") {\n        console.log(\"hello\");\n        return true;\n      }\n      return false;\n    }\n    addNewItem() {\n      if (typeof this.rule === 'object' && this.rule !== null && 'RuleType' in this.rule) {\n        if (Array.isArray(this.rule.Value)) {\n          this.rule.Value.push({\n            id: '1-4',\n            RuleType: 'EVAL',\n            Value: {\n              id: '1-1-1',\n              CompareTo: 'Value',\n              Operator: 'IN',\n              Field: 'Days_open',\n              Scope: 'unknown',\n              Value: ['Monday', 'Tuesday']\n            }\n          });\n          this.rule.Value.push({\n            id: '1-5',\n            RuleType: 'EVAL',\n            Value: {\n              id: '1-1-1',\n              CompareTo: 'Value',\n              Operator: 'IN',\n              Field: 'Days_open',\n              Scope: 'unknown',\n              Value: ['Monday', 'Tuesday', 'Wednesday']\n            }\n          });\n        }\n      }\n    }\n  }\n  ItemComponent.ɵfac = function ItemComponent_Factory(t) {\n    return new (t || ItemComponent)();\n  };\n  ItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ItemComponent,\n    selectors: [[\"app-item\"]],\n    inputs: {\n      onDragDrop$: [\"onDragDrop\", \"onDragDrop$\"],\n      item: \"item\",\n      invert: \"invert\",\n      rule: \"rule\",\n      usedIds: \"usedIds\"\n    },\n    decls: 5,\n    vars: 8,\n    consts: [[\"cdkDrag\", \"\", \"cdkDropList\", \"\", \"dragAndDropManager\", \"\", 3, \"cdkDropListData\", \"id\", \"ngClass\", \"cdkDropListDropped\"], [\"mat-icon-button\", \"\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"mat-icon-button\", \"\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"rule\", \"invert\", \"onDragDrop\"]],\n    template: function ItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵlistener(\"cdkDropListDropped\", function ItemComponent_Template_mat_card_cdkDropListDropped_0_listener($event) {\n          return ctx.onDragDrop$.next($event);\n        });\n        i0.ɵɵelementStart(1, \"mat-card-header\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, ItemComponent_button_3_Template, 3, 0, \"button\", 1);\n        i0.ɵɵtemplate(4, ItemComponent_ng_container_4_Template, 2, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"cdkDropListData\", ctx.rule.Value)(\"id\", ctx.rule.id)(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.invert));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.convertToString(ctx.rule));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isRuleLeaf(ctx.rule));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isRuleLeaf(ctx.rule));\n      }\n    },\n    directives: [i1.MatCard, i2.CdkDrag, i2.CdkDropList, i3.DragAndDropManagerDirective, i4.NgClass, i1.MatCardHeader, i4.NgIf, i5.MatButton, i6.MatIcon, i4.NgForOf, i1.MatCardContent, ItemComponent],\n    styles: [\".invert[_ngcontent-%COMP%]{background-color:var(--gray)}\"]\n  });\n  return ItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}