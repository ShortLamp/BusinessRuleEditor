{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let DragAndDropManagerService = /*#__PURE__*/(() => {\n  class DragAndDropManagerService {\n    constructor() {\n      this.list = new BehaviorSubject([]);\n      this.onListChange = () => this.list.asObservable();\n      this.register = id => {\n        if (!id || this.list.value.includes(id)) {\n          return;\n        }\n        this.list.next([...this.list.value, id]);\n        console.log(this.list);\n      };\n      this.unregister = id => {\n        this.list.next(this.list.value.filter(x => x !== id));\n        console.log(this.list);\n      };\n    }\n  }\n  DragAndDropManagerService.ɵfac = function DragAndDropManagerService_Factory(t) {\n    return new (t || DragAndDropManagerService)();\n  };\n  DragAndDropManagerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DragAndDropManagerService,\n    factory: DragAndDropManagerService.ɵfac\n  });\n  return DragAndDropManagerService;\n})();","map":null,"metadata":{},"sourceType":"module"}